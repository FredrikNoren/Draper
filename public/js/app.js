function CredentialsDialogViewModel(){this.username=ko.observable(),this.password=ko.observable(),this.closed=new signals.Signal}function HomeViewModel(){this.repos=visitedRepositories.getAll().map(function(t){return{title:t,link:"/#/repository?path="+encodeURIComponent(t)}})}var AppViewModel=function(t){var e=this;this.content=ko.observable(t),api.disconnected.add(function(){e.content(new UserErrorViewModel("Connection lost","Refresh the page to try to reconnect"))})};AppViewModel.prototype.updateAnimationFrame=function(t){this.content()&&this.content().updateAnimationFrame&&this.content().updateAnimationFrame(t)},AppViewModel.prototype.templateChooser=function(t){return t?t.template:""};var MainViewModel=function(){var t=this;this.path=ko.observable(),this.dialog=ko.observable(null),this.isAuthenticated=ko.observable(!ungit.config.authentication),this.realContent=ko.observable(new HomeViewModel),this.currentVersion=ko.observable(),this.latestVersion=ko.observable(),this.newVersionAvailable=ko.observable(),this.showBugtrackingNagscreen=ko.observable(!ungit.config.bugtracking&&!localStorage.getItem("bugtrackingNagscreenDismissed")),this.programEvents=new signals.Signal,this.programEvents.add(function(t){console.log("Event:",t)}),api.query("GET","/latestversion",void 0,function(e,o){t.currentVersion(o.currentVersion),t.latestVersion(o.latestVersion),t.newVersionAvailable(o.outdated)}),ungit.config.authentication&&(this.authenticationScreen=new LoginViewModel,this.authenticationScreen.loggedIn.add(function(){t.isAuthenticated(!0)})),this.content=ko.computed({write:function(e){t.realContent(e)},read:function(){return t.isAuthenticated()?t.realContent():t.authenticationScreen}}),api.getCredentialsHandler=function(e){var o=new CredentialsDialogViewModel;t.programEvents.dispatch({event:"credentialsRequested"}),o.closed.add(function(){t.programEvents.dispatch({event:"credentialsProvided"}),e({username:o.username(),password:o.password()})}),t.showDialog(o)}};MainViewModel.prototype.template="main",MainViewModel.prototype.updateAnimationFrame=function(t){this.content()&&this.content().updateAnimationFrame&&this.content().updateAnimationFrame(t)},MainViewModel.prototype.submitPath=function(){browseTo("repository?path="+encodeURIComponent(this.path()))},MainViewModel.prototype.showDialog=function(t){var e=this;t.closed.add(function(){e.dialog(null)}),this.dialog(t)},MainViewModel.prototype.enableBugtrackingAndStatistics=function(){var t=this;api.query("POST","/enablebugtrackingandstats",void 0,function(e){e||t.showBugtrackingNagscreen(!1)})},MainViewModel.prototype.enableBugtracking=function(){var t=this;api.query("POST","/enablebugtracking",void 0,function(e){e||t.showBugtrackingNagscreen(!1)})},MainViewModel.prototype.dismissBugtrackingNagscreen=function(){this.showBugtrackingNagscreen(!1),localStorage.setItem("bugtrackingNagscreenDismissed",!0)},MainViewModel.prototype.templateChooser=function(t){return t?t.template:""};var visitedRepositories={getAll:function(){return JSON.parse(localStorage.getItem("visitedRepositories")||"[]")},tryAdd:function(t){for(var e,o=this.getAll();-1!=(e=o.indexOf(t));)o.splice(e,1);o.unshift(t),localStorage.setItem("visitedRepositories",JSON.stringify(o))}};CredentialsDialogViewModel.prototype.template="credentialsDialog",CredentialsDialogViewModel.prototype.setCloser=function(t){this.close=t},CredentialsDialogViewModel.prototype.onclose=function(){this.closed.dispatch()},HomeViewModel.prototype.template="home";var CrashViewModel=function(){};CrashViewModel.prototype.template="crash";var LoginViewModel=function(){var t=this;this.loggedIn=new signals.Signal,this.status=ko.observable("loading"),this.username=ko.observable(),this.password=ko.observable(),this.loginError=ko.observable(),api.query("GET","/loggedin",void 0,function(e,o){o.loggedIn?(t.loggedIn.dispatch(),t.status("loggedIn")):t.status("login")})};LoginViewModel.prototype.login=function(){var t=this;api.query("POST","/login",{username:this.username(),password:this.password()},function(e){if(e){if(e.res.body.error)return t.loginError(e.res.body.error),!0}else t.loggedIn.dispatch(),t.status("loggedIn")})},LoginViewModel.prototype.template="login";var UserErrorViewModel=function(t){"string"==typeof arguments[0]&&(t={title:arguments[0],details:arguments[1]}),t=t||{},this.title=ko.observable(t.title),this.details=ko.observable(t.details)};UserErrorViewModel.prototype.template="usererror";var PathViewModel=function(t,e){var o=this;this.main=t,this.path=e,this.status=ko.observable("loading"),this.loadingProgressBar=new ProgressBarViewModel("path-loading-"+e),this.loadingProgressBar.start(),this.cloningProgressBar=new ProgressBarViewModel("path-loading-"+e,1e4),this.cloneUrl=ko.observable(),this.cloneDestinationImplicit=ko.computed(function(){var t="destination folder";if(!o.cloneUrl())return t;var e=o.cloneUrl().split("/");if(0==e.length)return t;var i=_.last(e);return i.indexOf(".git")==i.length-4&&(i=i.slice(0,-4)),i?i:t}),this.cloneDestination=ko.observable(),this.repository=ko.observable()};PathViewModel.prototype.template="path",PathViewModel.prototype.shown=function(){this.updateStatus()},PathViewModel.prototype.updateAnimationFrame=function(t){this.repository()&&this.repository().updateAnimationFrame(t)},PathViewModel.prototype.updateStatus=function(){var t=this;api.query("GET","/status",{path:this.path},function(e){if(t.loadingProgressBar.stop(),e){if("not-a-repository"==e.errorCode)return t.status("uninited"),!0;if("no-such-path"==e.errorCode)return t.status("invalidpath"),!0}else t.status("repository"),t.repository(new RepositoryViewModel(t.main,t.path))})},PathViewModel.prototype.initRepository=function(){var t=this;api.query("POST","/init",{path:this.path},function(e){e||t.updateStatus()})},PathViewModel.prototype.cloneRepository=function(){var t=this;t.status("cloning"),this.cloningProgressBar.start();var e=this.cloneDestination()||this.cloneDestinationImplicit();api.query("POST","/clone",{path:this.path,url:this.cloneUrl(),destinationDir:e},function(o){t.cloningProgressBar.stop(),o||browseTo("repository?path="+encodeURIComponent(t.path+"/"+e))})},crossroads.addRoute("/",function(){main.path(""),main.content(new HomeViewModel)}),crossroads.addRoute("/repository{?query}",function(t){main.path(t.path),main.content(new PathViewModel(main,t.path))});