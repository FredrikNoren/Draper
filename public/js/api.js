var Api=function(){this.connected=new signals.Signal,this.disconnected=new signals.Signal,this.repositoryChanged=new signals.Signal,this._changeDispatchBlockers=0,this._triedToDispatchWhileBlocked=!1,this.getCredentialsHandler=function(){throw new Error("Not implemented")},this._initSocket()};Api.prototype._incChangeEventBlock=function(){0==this._changeDispatchBlockers&&(this._triedToDispatchWhileBlocked=!1),this._changeDispatchBlockers++},Api.prototype._decChangeEventBlock=function(){this._changeDispatchBlockers--,0==this._changeDispatchBlockers&&this._triedToDispatchWhileBlocked&&(this._triedToDispatchWhileBlocked=!1,this.repositoryChanged.dispatch({repository:null}))},Api.prototype._dispatchChangeEvent=function(t){return this._changeDispatchBlockers>0?(this._triedToDispatchWhileBlocked=!0,void 0):(this.repositoryChanged.dispatch(t),void 0)},Api.prototype._initSocket=function(){var t=this;this.socket=io.connect(),this.socket.on("error",function(e){t._isConnected(function(n){if(n)throw new Error("Socket error: "+JSON.stringify(e));t._onDisconnect()})}),this.socket.on("disconnect",function(){t._onDisconnect()}),this.socket.on("connected",function(e){t.socketId=e.socketId}),this.socket.on("changed",function(e){t._dispatchChangeEvent(e)}),this.socket.on("request-credentials",function(){t.getCredentialsHandler(function(e){t.socket.emit("credentials",e)})})},Api.prototype._isConnected=function(t){superagent("GET","/api/ping").set("Accept","application/json").end(function(e,n){t(!e&&n&&n.ok)})},Api.prototype._onDisconnect=function(){this.isDisconnected||(this.isDisconnected=!0,this.disconnected.dispatch())},Api.prototype.query=function(t,e,n,o){var i=this,c=superagent(t,"/api"+e);"GET"==t?c.query(n):(c.send(n),this._incChangeEventBlock()),c.set("Accept","application/json"),c.end(function(n,c){if("GET"!=t&&i._decChangeEventBlock(),n||!c.ok){if(n&&n.crossDomain)return i._onDisconnect(),void 0;var s="unknown";c&&(s=c.body?c.body.errorCode&&"unknown"!=c.body.errorCode?c.body.errorCode:"string"==typeof c.body.error?c.body.error.split("\n")[0]:JSON.stringify(c.body.error):c.xhr.statusText+" "+c.xhr.status);var r={errorSummary:s,error:n,res:c,errorCode:c&&c.body?c.body.errorCode:"unknown"};if(o&&o(r))return;throw ungit.config.bugtracking&&bugsense.addExtraData("data",JSON.stringify(r)),new Error("Backend: "+e+", "+s)}o&&o(null,c.body)})},Api.prototype.watchRepository=function(t,e){this.socket.emit("watch",{path:t},e)};