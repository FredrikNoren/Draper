var Api=function(){this.connected=new signals.Signal,this.disconnected=new signals.Signal,this.repositoryChanged=new signals.Signal,this.changeDispatchBlockers=0,this.getCredentialsHandler=function(){throw new Error("Not implemented")},this._initSocket()};Api.prototype._dispatchChangeEvent=function(n){this.changeDispatchBlockers>0||this.repositoryChanged.dispatch(n)},Api.prototype._initSocket=function(){var n=this;this.socket=io.connect(),this.socket.on("error",function(t){n._isConnected(function(o){if(o)throw new Error("Socket error: "+JSON.stringify(t));n._onDisconnect()})}),this.socket.on("disconnect",function(){n._onDisconnect()}),this.socket.on("connected",function(t){n.socketId=t.socketId}),this.socket.on("changed",function(t){n._dispatchChangeEvent(t)}),this.socket.on("request-credentials",function(){n.getCredentialsHandler(function(t){n.socket.emit("credentials",t)})})},Api.prototype._isConnected=function(n){superagent("GET","/api/ping").set("Accept","application/json").end(function(t,o){n(!t&&o&&o.ok)})},Api.prototype._onDisconnect=function(){this.isDisconnected||(this.isDisconnected=!0,this.disconnected.dispatch())},Api.prototype.query=function(n,t,o,e){var i=this,r=superagent(n,"/api"+t);"GET"==n?r.query(o):(r.send(o),this.changeDispatchBlockers++),r.set("Accept","application/json"),r.end(function(o,r){if("GET"!=n&&i.changeDispatchBlockers--,o||!r.ok){if(o&&o.crossDomain)return i._onDisconnect(),void 0;var s="unknown";r&&(s=r.body?r.body.errorCode&&"unknown"!=r.body.errorCode?r.body.errorCode:"string"==typeof r.body.error?r.body.error.split("\n")[0]:JSON.stringify(r.body.error):r.xhr.statusText+" "+r.xhr.status);var c={errorSummary:s,error:o,res:r,errorCode:r&&r.body?r.body.errorCode:"unknown"};if(e&&e(c))return;throw ungit.config.bugtracking&&bugsense.addExtraData("data",JSON.stringify(c)),new Error("Backend: "+t+", "+s)}e&&e(null,r.body)})},Api.prototype.watchRepository=function(n,t){this.socket.emit("watch",{path:n},t)};